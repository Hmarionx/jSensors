/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.profesorfalken.jsensors.manager.unix;

/**
 *
 * @author javier
 */
public interface CSubFeatureType {
    
	static int SENSORS_SUBFEATURE_IN_INPUT = CFeatureType.SENSORS_FEATURE_IN << 8;
	static int SENSORS_SUBFEATURE_IN_MIN = SENSORS_SUBFEATURE_IN_INPUT + 1;
        static int SENSORS_SUBFEATURE_IN_MAX = SENSORS_SUBFEATURE_IN_MIN+1;
	static int SENSORS_SUBFEATURE_IN_LCRIT = SENSORS_SUBFEATURE_IN_MAX+1;
	static int SENSORS_SUBFEATURE_IN_CRIT = SENSORS_SUBFEATURE_IN_LCRIT+1;
	static int SENSORS_SUBFEATURE_IN_AVERAGE = SENSORS_SUBFEATURE_IN_CRIT+1;
	static int SENSORS_SUBFEATURE_IN_LOWEST = SENSORS_SUBFEATURE_IN_AVERAGE+1;
	static int SENSORS_SUBFEATURE_IN_HIGHEST = SENSORS_SUBFEATURE_IN_LOWEST+1;
                
	static int SENSORS_SUBFEATURE_IN_ALARM = (CFeatureType.SENSORS_FEATURE_IN << 8) | 0x80;
	static int SENSORS_SUBFEATURE_IN_MIN_ALARM = SENSORS_SUBFEATURE_IN_ALARM+1;
	static int SENSORS_SUBFEATURE_IN_MAX_ALARM= SENSORS_SUBFEATURE_IN_MIN_ALARM+1;
	static int SENSORS_SUBFEATURE_IN_BEEP= SENSORS_SUBFEATURE_IN_MAX_ALARM+1;
	static int SENSORS_SUBFEATURE_IN_LCRIT_ALARM= SENSORS_SUBFEATURE_IN_BEEP+1;
	static int SENSORS_SUBFEATURE_IN_CRIT_ALARM= SENSORS_SUBFEATURE_IN_LCRIT_ALARM+1;
/*
	static int SENSORS_SUBFEATURE_FAN_INPUT = CFeatureType.SENSORS_FEATURE_FAN << 8,
	static int SENSORS_SUBFEATURE_FAN_MIN,
	static int SENSORS_SUBFEATURE_FAN_MAX,
	static int SENSORS_SUBFEATURE_FAN_ALARM = (CFeatureType.SENSORS_FEATURE_FAN << 8) | 0x80,
	static int SENSORS_SUBFEATURE_FAN_FAULT,
	static int SENSORS_SUBFEATURE_FAN_DIV,
	static int SENSORS_SUBFEATURE_FAN_BEEP,
	static int SENSORS_SUBFEATURE_FAN_PULSES,
	static int SENSORS_SUBFEATURE_FAN_MIN_ALARM,
	static int SENSORS_SUBFEATURE_FAN_MAX_ALARM,

	static int SENSORS_SUBFEATURE_TEMP_INPUT = CFeatureTYpe.SENSORS_FEATURE_TEMP << 8,
	static int SENSORS_SUBFEATURE_TEMP_MAX,
	static int SENSORS_SUBFEATURE_TEMP_MAX_HYST,
	static int SENSORS_SUBFEATURE_TEMP_MIN,
	static int SENSORS_SUBFEATURE_TEMP_CRIT,
	static int SENSORS_SUBFEATURE_TEMP_CRIT_HYST,
	static int SENSORS_SUBFEATURE_TEMP_LCRIT,
static int 	SENSORS_SUBFEATURE_TEMP_EMERGENCY,
	static int SENSORS_SUBFEATURE_TEMP_EMERGENCY_HYST,
	static int SENSORS_SUBFEATURE_TEMP_LOWEST,
	static int SENSORS_SUBFEATURE_TEMP_HIGHEST,
	static int SENSORS_SUBFEATURE_TEMP_MIN_HYST,
	static int SENSORS_SUBFEATURE_TEMP_LCRIT_HYST,
	static int SENSORS_SUBFEATURE_TEMP_ALARM = (CFeatureTYpe.SENSORS_FEATURE_TEMP << 8) | 0x80,
	static int SENSORS_SUBFEATURE_TEMP_MAX_ALARM,
	static int SENSORS_SUBFEATURE_TEMP_MIN_ALARM,
	static int SENSORS_SUBFEATURE_TEMP_CRIT_ALARM,
	static int SENSORS_SUBFEATURE_TEMP_FAULT,
	static int SENSORS_SUBFEATURE_TEMP_TYPE,
	static int SENSORS_SUBFEATURE_TEMP_OFFSET,
	static int SENSORS_SUBFEATURE_TEMP_BEEP,
	static int SENSORS_SUBFEATURE_TEMP_EMERGENCY_ALARM,
	static int SENSORS_SUBFEATURE_TEMP_LCRIT_ALARM,

	static int SENSORS_SUBFEATURE_POWER_AVERAGE = CFeatureTYpe.SENSORS_FEATURE_POWER << 8,
	static int SENSORS_SUBFEATURE_POWER_AVERAGE_HIGHEST,
	static int SENSORS_SUBFEATURE_POWER_AVERAGE_LOWEST,
	static int SENSORS_SUBFEATURE_POWER_INPUT,
	static int SENSORS_SUBFEATURE_POWER_INPUT_HIGHEST,
	static int SENSORS_SUBFEATURE_POWER_INPUT_LOWEST,
	static int SENSORS_SUBFEATURE_POWER_CAP,
	static int SENSORS_SUBFEATURE_POWER_CAP_HYST,
	static int SENSORS_SUBFEATURE_POWER_MAX,
	static int SENSORS_SUBFEATURE_POWER_CRIT,
	static int SENSORS_SUBFEATURE_POWER_AVERAGE_INTERVAL = (CFeatureTYpe.SENSORS_FEATURE_POWER << 8) | 0x80,
	static int SENSORS_SUBFEATURE_POWER_ALARM,
	static int SENSORS_SUBFEATURE_POWER_CAP_ALARM,
	static int SENSORS_SUBFEATURE_POWER_MAX_ALARM,
	static int SENSORS_SUBFEATURE_POWER_CRIT_ALARM,

	static int SENSORS_SUBFEATURE_ENERGY_INPUT = CFeatureTYpe.SENSORS_FEATURE_ENERGY << 8,

	static int SENSORS_SUBFEATURE_CURR_INPUT = CFeatureTYpe.SENSORS_FEATURE_CURR << 8,
	static int SENSORS_SUBFEATURE_CURR_MIN,
	static int SENSORS_SUBFEATURE_CURR_MAX,
	static int SENSORS_SUBFEATURE_CURR_LCRIT,
	static int SENSORS_SUBFEATURE_CURR_CRIT,
	static int SENSORS_SUBFEATURE_CURR_AVERAGE,
	static int SENSORS_SUBFEATURE_CURR_LOWEST,
	static int SENSORS_SUBFEATURE_CURR_HIGHEST,
	static int SENSORS_SUBFEATURE_CURR_ALARM = (CFeatureTYpe.SENSORS_FEATURE_CURR << 8) | 0x80,
	static int SENSORS_SUBFEATURE_CURR_MIN_ALARM,
	static int SENSORS_SUBFEATURE_CURR_MAX_ALARM,
	static int SENSORS_SUBFEATURE_CURR_BEEP,
	static int SENSORS_SUBFEATURE_CURR_LCRIT_ALARM,
	static int SENSORS_SUBFEATURE_CURR_CRIT_ALARM,

	static int SENSORS_SUBFEATURE_HUMIDITY_INPUT = CFeatureTYpe.SENSORS_FEATURE_HUMIDITY << 8,

	static int SENSORS_SUBFEATURE_VID = CFeatureTYpe.SENSORS_FEATURE_VID << 8,

	static int SENSORS_SUBFEATURE_INTRUSION_ALARM = CFeatureTYpe.SENSORS_FEATURE_INTRUSION << 8,
	static int SENSORS_SUBFEATURE_INTRUSION_BEEP,

	static int SENSORS_SUBFEATURE_BEEP_ENABLE = CFeatureTYpe.SENSORS_FEATURE_BEEP_ENABLE << 8,

	SENSORS_SUBFEATURE_UNKNOWN = INT_MAX,*/
}
